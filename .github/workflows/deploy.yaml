name: Deploy with Terragrunt

on:
  pull_request:
    types:
      - synchronize
      - closed
      - opened
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.github/**'
  
jobs:
  # test-infra:
  #   if: github.event.pull_request.merged == false && github.event_name == 'pull_request'
  #   permissions:
  #     contents: read
  #     pull-requests: read
  #     id-token: write
  #   uses: devops-homelab/homelab-github-reusable-workflows/.github/workflows/tf-test.yaml@main
  #   secrets:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     DO_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
  #     TF_VAR_git_username: ${{ secrets.ARGOCD_GIT_USERNAME }}
  #     TF_VAR_pat_token: ${{ secrets.ARGOCD_PAT_TOKEN }}
  #     TF_VAR_sso_client_id: ${{ secrets.ARGOCD_SSO_CLIENT_ID }}
  #     TF_VAR_sso_client_secret: ${{ secrets.ARGOCD_SSO_CLIENT_SECRET }}

  deploy-infra-on-pr:
    if: github.event.pull_request.merged == false && github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: read
      id-token: write
    uses: devops-homelab/homelab-github-reusable-workflows/.github/workflows/tf-deploy.yaml@main
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DO_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
      TF_VAR_git_username: ${{ secrets.ARGOCD_GIT_USERNAME }}
      TF_VAR_pat_token: ${{ secrets.ARGOCD_PAT_TOKEN }}
      TF_VAR_sso_client_id: ${{ secrets.ARGOCD_SSO_CLIENT_ID }}
      TF_VAR_sso_client_secret: ${{ secrets.ARGOCD_SSO_CLIENT_SECRET }}
    with:
      config_file: config.env

  deploy-infra-on-merge:
    if: github.event.pull_request.merged == true
    permissions:
      contents: read
      pull-requests: read
      id-token: write
    uses: devops-homelab/homelab-github-reusable-workflows/.github/workflows/tf-deploy.yaml@main
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DO_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
      TF_VAR_git_username: ${{ secrets.ARGOCD_GIT_USERNAME }}
      TF_VAR_pat_token: ${{ secrets.ARGOCD_PAT_TOKEN }}
      TF_VAR_sso_client_id: ${{ secrets.ARGOCD_SSO_CLIENT_ID }}
      TF_VAR_sso_client_secret: ${{ secrets.ARGOCD_SSO_CLIENT_SECRET }}
    with:
      config_file: config.env